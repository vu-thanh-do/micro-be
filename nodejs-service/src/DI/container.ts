import { Container } from "inversify";
import { LoggerService } from "../services/services/logger.service";
import { LogsConsumer } from "../rabbitMQ/consumers";
import { NotificationService } from "../services/services/notification.service";
import { UnitOfWork } from "../unitOfWork/unitOfWork";
import { CodeApprovalService } from "../services/services/codeApproval.service";
import CodeApprovalController from "../controllers/controllers-project/codeApproval/codeApproval.controller";
import { RequireDataService } from "../services/services/requireData.service";
import RequireDataController from "../controllers/controllers-project/requireData/requireData.controller";
import { FormTemplateService } from "../services/services/formTemplate.service";
import FormTemplateController from "../controllers/controllers-project/formTemplate/formTemplate.controller";
import NotificationController from "../controllers/controllers-project/noti/notification.controller";
import LoggerController from "../controllers/controllers-project/logs/logs.controller";
import { ResponseDataService } from "../services/services/response.service";
import { HeadCountRecruitEzV4 } from "../services/service-Ezv4/headcountDep";
import HeadCountPlanController from "../controllers/controllers-project/headCountPlan/headCountPlan.controller";
import { InfoUserEzV4 } from "../services/service-Ezv4/infoUserEzV4";
import DepartmentEzV4 from "../services/service-Ezv4/department";
import { LanguageService } from "../services/services/language.service";
import LanguageController from "../controllers/controllers-project/language/language.controller";
import RequestRecruitmentController from "../controllers/controllers-project/requestRecruitment/requestRecruitment.controller";
import LineMfgController from "../controllers/controllers-project/lineMfg/LineMfg.controller";
import MfgReplaceRecuitmentController from "../controllers/controllers-project/requestRecruitment/mfgReplaceRecuitment.controller";
import { ResignController } from "../controllers/controllers-project/requestRecruitment/resign.controller";
import ResignInfoEzv4 from "../services/service-Ezv4/resign";
import { CompanySyncService } from "../services/services/companySync.service";
import { SyncCompanyStructureController } from "../controllers/controllers-project/syncCompanyStructure/syncCompanyStrucTure.controller";
import SumaryDepService from "../services/services/sumaryDep.service";
import SumaryDepartmentController from "../controllers/controllers-project/sumaryHc/sumaryDepartment.controller";
import { InfoUserController } from "../controllers/controllers-project/infoUser/infoUser.controller";
import RequestMfgNewController from "../controllers/controllers-project/requestRecruitment/requestMfgNew.controller";
import { AdoptionService } from "../services/services/adoption.service";
import AdoptionController from "../controllers/controllers-project/adoption/adoption.controller";
import { PendingApprovalService } from "../services/services/pendingApproval.service";
import { PendingApprovalController } from "../controllers/controllers-project/pendingApproval/pendingApproval.controller";
import { HistoryApprovalService } from "../services/services/historyApproval.service";
import HistoryApprovalController from "../controllers/controllers-project/historyApprove/historyApprove.controller";
import AdoptionEzV4 from "../services/service-Ezv4/adoption";
const container = new Container();
// Bind dependencies
container.bind<LoggerService>(LoggerService).toSelf();
container.bind<CodeApprovalService>(CodeApprovalService).toSelf();
container.bind<RequireDataService>(RequireDataService).toSelf();
container.bind<FormTemplateService>(FormTemplateService).toSelf();
container.bind<LogsConsumer>(LogsConsumer).toSelf();
container.bind<NotificationService>(NotificationService).toSelf();
container.bind<UnitOfWork>(UnitOfWork).toSelf();
container.bind<ResponseDataService>(ResponseDataService).toSelf();
container.bind<HeadCountRecruitEzV4>(HeadCountRecruitEzV4).toSelf();
container.bind<InfoUserEzV4>(InfoUserEzV4).toSelf();
container.bind<DepartmentEzV4>(DepartmentEzV4).toSelf();
container.bind<LanguageService>(LanguageService).toSelf();
container.bind<ResignInfoEzv4>(ResignInfoEzv4).toSelf();
container.bind<CompanySyncService>(CompanySyncService).toSelf();
container.bind<SumaryDepartmentController>(SumaryDepartmentController).toSelf();
container.bind<RequestMfgNewController>(RequestMfgNewController).toSelf();
container.bind<AdoptionService>(AdoptionService).toSelf();
container.bind<PendingApprovalService>(PendingApprovalService).toSelf();
container.bind<HistoryApprovalService>(HistoryApprovalService).toSelf();
container.bind<AdoptionEzV4>(AdoptionEzV4).toSelf();
// bind controlelr
container.bind<CodeApprovalController>(CodeApprovalController).toSelf();
container.bind<RequireDataController>(RequireDataController).toSelf();
container.bind<FormTemplateController>(FormTemplateController).toSelf();
container.bind<NotificationController>(NotificationController).toSelf();
container.bind<LoggerController>(LoggerController).toSelf();
container.bind<HeadCountPlanController>(HeadCountPlanController).toSelf();
container.bind<LanguageController>(LanguageController).toSelf();
container.bind<RequestRecruitmentController>(RequestRecruitmentController).toSelf();
container.bind<LineMfgController>(LineMfgController).toSelf();
container.bind<MfgReplaceRecuitmentController>(MfgReplaceRecuitmentController).toSelf();
container.bind<ResignController>(ResignController).toSelf();
container.bind<SyncCompanyStructureController>(SyncCompanyStructureController).toSelf();
container.bind<SumaryDepService>(SumaryDepService).toSelf();
container.bind<InfoUserController>(InfoUserController).toSelf();
container.bind<AdoptionController>(AdoptionController).toSelf();
container.bind<PendingApprovalController>(PendingApprovalController).toSelf();
container.bind<HistoryApprovalController>(HistoryApprovalController).toSelf();
export default container;
